#1. Top 5 Customers by Total Spending

SELECT c.name
,SUM(oi.total_price) AS total_spending
FROM Customers c
     JOIN Orders o 
     ON c.customer_id = o.customer_id
     JOIN Order_Items oi 
     ON o.order_id = oi.order_id
GROUP BY c.name
ORDER BY total_spending DESC
LIMIT 5;

#2. Best-Selling Product by Category

SELECT c.name AS category
,p.name AS product, SUM(oi.quantity) AS total_sold
FROM Categories c
     JOIN Products p 
     ON c.category_id = p.category_id
	 JOIN Order_Items oi 
     ON p.product_id = oi.product_id
GROUP BY c.name, p.name
ORDER BY total_sold DESC
LIMIT 1;

#3. Monthly Sales Trend

SELECT DATE_FORMAT(o.order_date,'%Y-%m') AS month
,SUM(oi.total_price) AS total_revenue
FROM orders o
		 JOIN order_items oi
		 ON o.order_id = oi.order_id
GROUP BY 1
ORDER BY 2     

#4. Customers with No Recent Orders (Last Order Over 6 Months Ago):

SELECT c.name AS customer
,MAX(o.order_date) AS last_order_date
FROM customers c
     LEFT JOIN orders o 
     ON c.customer_id = o.customer_id
GROUP BY c.name
HAVING last_order_date IS NULL 
OR last_order_date <= DATE_SUB(NOW(), INTERVAL 6 MONTH);

#5. Average Order Value (AOV) Over Time

SELECT DATE_FORMAT(o.order_date, '%Y-%m') AS month
,AVG(oi.total_price) AS avg_order_value
FROM orders o
     JOIN order_items oi
     ON o.order_id = oi.order_id
GROUP BY month
ORDER BY month     

#6. Find the products that have never been ordered

SELECT p.product_id
,p.name 
FROM products p
     LEFT JOIN order_items oi 
     ON p.product_id = oi.product_id
WHERE oi.order_item_id IS NULL       

#7. List the products in the "Electronics" category and their total sales.

SELECT p.name
,c.name
,SUM(oi.total_price)	
FROM   products p
     JOIN  categories c
     ON c.categories_id = p.categories_id
     JOIN order_items oi
     ON oi.product_id = p.product_id
WHERE c.name = 'electronic'     
GROUP BY 1
ORDER BY 3 DESC

#8. Calculate the average time between two consecutive orders for each customer.

SELECT c.customer_id
,c.name
,AVG(DATEDIFF(o.order_date, LAG(o.order_date,1))AS avg_time_between_orders
FROM customer c
     JOIN orders
     ON c.customer_id = o.customer_id
GROUP BY 1,2
ORDER BY 3     	

#9. Find the total revenue generated in each category for the year 2022.

SELECT YEAR(o.order_date) AS year
,c.name
,SUM(oi.total_price)
FROM categories c
     JOIN products p
     ON c.category_id = p.category_id
     JOIN order_items oi
     ON oi.product_id = p.product_id
     JOIN orders o
     ON o.order_id = oi.order_id
WHERE year = 2022
GROUP BY 1,2
ORDER BY 3 DESC

#10.Identify the most and least frequent days for placing orders	
     
SELECT DAYNAME(o.order_date) AS day
,COUNT(o.order_id)
FROM orders
GROUP BY 1
ORDER BY 2 DESC

#11. Find the top 3 customers who purchased the most products within a single order

SELECT c.customer_id 
,c.name
,o.order_id
,COUNT(oi.order_item_id) AS product_count
FROM orders o
     JOIN customers c
     ON c.customer_id = o.customer_id
     JOIN order_items oi
     ON oi.order_id = o.order_id
GROUP BY c.customer_id, o.order_id
HAVING product_count = (SELECT MAX(product_count) 
                        FROM (SELECT c.customer_id
                              , o.order_id
                              , COUNT(oi.order_item_id) AS product_count 
                              FROM customers c 
                              JOIN orders o 
                              ON c.customer_id = o.customer_id 
                              JOIN order_items oi 
                              ON o.order_id = oi.order_id 
                              GROUP BY c.customer_id, o.order_id) AS counts)
LIMIT 3	

#12. List the top-selling product for each category

WITH RankedProducts AS (
    SELECT p.product_id
           ,p.name AS product_name
           ,c.name AS category_name
           ,RANK() OVER (PARTITION BY c.category_id ORDER BY SUM(oi.quantity) DESC) AS rnk
    FROM products p
    JOIN categories c 
    ON p.category_id = c.category_id
    JOIN order_items oi 
    ON p.product_id = oi.product_id
    GROUP BY c.category_id, p.product_id
)
SELECT category_name
       ,product_name
FROM RankedProducts
WHERE rnk = 1;



    


     
     
     
     


 














